body {
  font-family: 'Open Sans', sans-serif;
  margin: 0;
  overflow-x: hidden;
}

.top-menu {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.top-menu-list ul {
  list-style: none;
}

.header {
  max-width: 1200px;
  padding-left: 30px;
  padding-right: 30px;
  margin: 0 auto;
  max-width: none;
  background: #69d2e7;
  height: 50vh;
  min-height: 260px;
}

.hello-block {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  color: #fff;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  text-align: center;
}

.hello-title,.hello-descr,.top-menu,.hello-block {
  width: -webkit-calc(100% - 30px);
  width: calc(100% - 30px);
}

.hello-title,.hello-descr {
  margin: 0;
  text-transform: uppercase;
}

@media screen and (max-width: 1100px) {
  .header {
    padding-left: 30px;
    padding-right: 30px;
  }
}

@media screen and (max-width: 960px) {
  .header {
    padding-left: 15px;
    padding-right: 15px;
  }
}

@media screen and (max-width: 780px) {
  .header {
    padding-left: 3%;
    padding-right: 3%;
  }
}

@media screen and (max-width: 560px) {
  .header {
    padding-left: 2%;
    padding-right: 2%;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
